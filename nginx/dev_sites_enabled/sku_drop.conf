upstream frontend {
     server react_dev:3000;
}

upstream backend {
    server django_dev:8000;
}

upstream backend_wss {
    server django_dev:8001;
}



upstream grafana {
    server grafana:3000;
}

server {
    listen 80;

    server_name dev.skudrop.com;

    return 301 https://dev.skudrop.com$request_uri;
}

server {
    client_max_body_size 31M;
    listen 443 ssl default_server http2;                        
    listen [::]:443 ssl default_server http2;                   
                                                            
    ssl_certificate /etc/nginx/ssl/dev.skudrop.com.crt;
    ssl_certificate_key /etc/nginx/ssl/dev.skudrop.com.key;
                                                            
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
#    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_prefer_server_ciphers on;                               
                                                            
    ssl_session_cache shared:SSL:10m;                           
    ssl_session_timeout 10m;                                    
                                                            
    server_name dev.skudrop.com;

    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;

    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    }

    location /grafana/ {
        proxy_pass  http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect    off;
        rewrite ^/grafana$ / break;
        rewrite ^/grafana(.*)$ $1 break;
    }

    location /wss {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
    }

    location /api {
        proxy_pass http://backend;
        proxy_set_header Host $http_host;
        proxy_set_header Connection 'upgrade';                      
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    }
    
}
